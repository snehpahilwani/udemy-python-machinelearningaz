dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
dataset = read.csv("50_Startups.csv")
dataset = read.csv("50_Startups.csv")
dataset = read.csv("50_Startups.csv")
source('C:/Users/snehc/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/multiple_linear_regression.R')
dataset = read.csv('50_Startups.csv')
setwd("C:/Users/snehc/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1,2,3))
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
iables
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
#Predicting the test set results
y_pred = predict(regressor, newdata = test_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor)
eeping relevant variables
regressor = lm(formula = Profit ~ R.D.Spend  + Marketing.Spend,
data = training_set)
summary(regressor)
keeping relevant variables
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor)
#Predicting the test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
summary(regressor)
#Predicting the test set results
y_pred = predict(regressor, newdata = test_set)
